{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/video/video.component.ts","./src/app/video/video.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, HostListener } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  \n}\n","<app-video></app-video>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { VideoComponent } from './video/video.component';\nimport { HttpClientModule } from '@angular/common/http';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    VideoComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, HostListener, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-video',\n  templateUrl: './video.component.html',\n  styleUrls: ['./video.component.css'],\n\n})\nexport class VideoComponent implements OnInit {\n\n  showInitialImage: boolean = true;\n  isEditing: boolean = false;\n  videoSegments = [\n    { id: 1, active: false, src: 'assets/video1.mp4', videoEnded: false, showMessage: false, showImage: true, imageSrc: '', videoSrc:'', title: '', message: '' },\n    { id: 2, active: false, src: 'assets/video2.mp4', videoEnded: false, showMessage: false, showImage: true, imageSrc: '', videoSrc:'', title: '', message: '' },\n    { id: 3, active: false, src: 'assets/video3.mp4', videoEnded: false, showMessage: false, showImage: true, imageSrc: '', videoSrc:'', title: '', message: '' },\n    { id: 4, active: false, src: 'assets/video4.mp4', videoEnded: false, showMessage: false, showImage: true, imageSrc: '', videoSrc:'', title: '', message: '' }\n  ];\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n    this.loadMultimediaData();\n  }\n\n // Cargar los datos de cada franja desde su respectivo JSON\nloadMultimediaData() {\n  this.videoSegments.forEach((segment, index) => {\n    this.http.get<any>(`assets/multimedia_branch${segment.id}.json`).subscribe(data => {\n      segment.title = data.title;\n      segment.message = data.message;\n      segment.imageSrc = this.sanitizeBase64(data.image, 'image/png'); // Convertir imagen base64\n      segment.videoSrc = this.sanitizeBase64(data.video, 'video/mp4'); // Convertir video base64\n    });\n  });\n}\n\n// Método para sanear base64\nsanitizeBase64(base64Data: string, mimeType: string): string {\n  return `data:${mimeType};base64,${base64Data.split(',')[1]}`; \n}\n\n  // Cuando termina un video\n  onSegmentVideoEnd(index: number) {\n    this.videoSegments[index].active = false; // Oculta el video\n    this.videoSegments[index].showMessage = true; // Muestra el mensaje\n    setTimeout(() => {\n      this.videoSegments[index].showMessage = false; // Oculta el mensaje\n      this.videoSegments[index].showImage = true; // Muestra la imagen de nuevo\n      this.checkForReturnToInitialImage();\n    }, 5000); // Muestra el mensaje por 5 segundos antes de regresar a la imagen\n  }\n\n  // Regresar a la imagen inicial si todos los videos y mensajes han terminado\n  checkForReturnToInitialImage() {\n    const allInactive = this.videoSegments.every(segment => !segment.active && !segment.showMessage);\n    console.log(\"allInactive\", allInactive)\n    if (allInactive) {\n      setTimeout(() => {\n        // Ocultar todas las imágenes de los segmentos\n        this.videoSegments.forEach(segment => segment.showImage = false);\n        this.videoSegments.forEach(segment => segment.active = false);\n\n        // Mostrar la imagen principal\n        this.showInitialImage = true;\n        this.isEditing = false\n\n      }, 1500);\n    }\n  }\n\n  @HostListener('window:keydown', ['$event'])\n  onKeyPress(event: KeyboardEvent) {\n    if (event.key === '0') {\n      // Bloquear si hay videos o mensajes activos\n      const someActive = this.videoSegments.some(segment => segment.active || segment.showMessage);\n      console.log(\"someactive\", someActive)\n      if (someActive) return;\n\n      this.isEditing = true;\n      this.videoSegments.forEach(segment => {\n        segment.showImage = true;\n        segment.active = false;\n      });\n\n      setTimeout(() => {\n        const someActive = this.videoSegments.some(segment => segment.active || segment.showMessage);\n      console.log(\"someactive2\", someActive)\n      if (someActive) return;\n        this.videoSegments.forEach(segment => {\n          segment.showImage = false;\n        });\n        this.isEditing = false;\n        this.showInitialImage = true; // Mostrar la imagen principal\n      }, 10000);\n\n    }\n\n    const key = parseInt(event.key, 10);\n    if (key >= 1 && key <= 4) {\n      this.isEditing = true;\n      this.videoSegments.forEach(segment => {\n        segment.showImage = true;\n        segment.active = false;\n      });\n     \n      const index = key - 1;\n      this.videoSegments[index].active = true;\n      this.videoSegments[index].showImage = false;\n      this.videoSegments[index].videoEnded = false;\n      this.videoSegments[index].showMessage = false;\n    }\n\n  }\n}\n","<div class=\"video-container\">\n\n  <img *ngIf=\"showInitialImage\" src=\"assets/usfq-image.png\" class=\"fullscreen-image\" />\n\n\n  <div class=\"grid-container\" *ngIf=\"isEditing\">\n    <div class=\"video-segment\" *ngFor=\"let segment of videoSegments; let i = index\" [class.active]=\"segment.active\"\n      [class.inactive]=\"!segment.active\">\n      <!-- Imagen de los segmentos -->\n      <img *ngIf=\"segment.showImage\" [src]=\"segment.imageSrc\" class=\"segment-image\" />\n\n\n      <!-- Video de los segmentos -->\n      <video *ngIf=\"segment.active\" autoplay muted (ended)=\"onSegmentVideoEnd(i)\" class=\"segment-video\">\n        <source [src]=\"segment.src\" type=\"video/mp4\" />\n        Your browser does not support the video tag.\n      </video>\n\n      <div class=\"message-container\" *ngIf=\"segment.showMessage\">\n        <h2 class=\"message-title\">{{ segment.title }}</h2>\n        <p class=\"message-text\">{{ segment.message }}</p>\n      </div>\n    </div>\n  </div>\n\n\n\n\n\n  \n\n\n\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}
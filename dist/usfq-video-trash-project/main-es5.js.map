{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/video/video.component.ts","webpack:///src/app/video/video.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","VideoComponent","http","showInitialImage","isEditing","videoSegments","active","src","videoEnded","showMessage","showImage","imageSrc","videoSrc","title","message","ngOnInit","loadMultimediaData","forEach","segment","index","get","subscribe","data","sanitizeBase64","image","video","base64Data","mimeType","split","onSegmentVideoEnd","setTimeout","checkForReturnToInitialImage","allInactive","every","console","log","onKeyPress","event","key","someActive","some","parseInt","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, HostListener } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  \n}\n","<app-video></app-video>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { VideoComponent } from './video/video.component';\nimport { HttpClientModule } from '@angular/common/http';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    VideoComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, HostListener, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-video',\n  templateUrl: './video.component.html',\n  styleUrls: ['./video.component.css'],\n\n})\nexport class VideoComponent implements OnInit {\n\n  showInitialImage: boolean = true;\n  isEditing: boolean = false;\n  videoSegments = [\n    { id: 1, active: false, src: 'assets/video1.mp4', videoEnded: false, showMessage: false, showImage: true, imageSrc: '', videoSrc:'', title: '', message: '' },\n    { id: 2, active: false, src: 'assets/video2.mp4', videoEnded: false, showMessage: false, showImage: true, imageSrc: '', videoSrc:'', title: '', message: '' },\n    { id: 3, active: false, src: 'assets/video3.mp4', videoEnded: false, showMessage: false, showImage: true, imageSrc: '', videoSrc:'', title: '', message: '' },\n    { id: 4, active: false, src: 'assets/video4.mp4', videoEnded: false, showMessage: false, showImage: true, imageSrc: '', videoSrc:'', title: '', message: '' }\n  ];\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n    this.loadMultimediaData();\n  }\n\n // Cargar los datos de cada franja desde su respectivo JSON\nloadMultimediaData() {\n  this.videoSegments.forEach((segment, index) => {\n    this.http.get<any>(`assets/multimedia_branch${segment.id}.json`).subscribe(data => {\n      segment.title = data.title;\n      segment.message = data.message;\n      segment.imageSrc = this.sanitizeBase64(data.image, 'image/png'); // Convertir imagen base64\n      segment.videoSrc = this.sanitizeBase64(data.video, 'video/mp4'); // Convertir video base64\n    });\n  });\n}\n\n// Método para sanear base64\nsanitizeBase64(base64Data: string, mimeType: string): string {\n  return `data:${mimeType};base64,${base64Data.split(',')[1]}`; \n}\n\n  // Cuando termina un video\n  onSegmentVideoEnd(index: number) {\n    this.videoSegments[index].active = false; // Oculta el video\n    this.videoSegments[index].showMessage = true; // Muestra el mensaje\n    setTimeout(() => {\n      this.videoSegments[index].showMessage = false; // Oculta el mensaje\n      this.videoSegments[index].showImage = true; // Muestra la imagen de nuevo\n      this.checkForReturnToInitialImage();\n    }, 5000); // Muestra el mensaje por 5 segundos antes de regresar a la imagen\n  }\n\n  // Regresar a la imagen inicial si todos los videos y mensajes han terminado\n  checkForReturnToInitialImage() {\n    const allInactive = this.videoSegments.every(segment => !segment.active && !segment.showMessage);\n    console.log(\"allInactive\", allInactive)\n    if (allInactive) {\n      setTimeout(() => {\n        // Ocultar todas las imágenes de los segmentos\n        this.videoSegments.forEach(segment => segment.showImage = false);\n        this.videoSegments.forEach(segment => segment.active = false);\n\n        // Mostrar la imagen principal\n        this.showInitialImage = true;\n        this.isEditing = false\n\n      }, 1500);\n    }\n  }\n\n  @HostListener('window:keydown', ['$event'])\n  onKeyPress(event: KeyboardEvent) {\n    if (event.key === '0') {\n      // Bloquear si hay videos o mensajes activos\n      const someActive = this.videoSegments.some(segment => segment.active || segment.showMessage);\n      console.log(\"someactive\", someActive)\n      if (someActive) return;\n\n      this.isEditing = true;\n      this.videoSegments.forEach(segment => {\n        segment.showImage = true;\n        segment.active = false;\n      });\n\n      setTimeout(() => {\n        const someActive = this.videoSegments.some(segment => segment.active || segment.showMessage);\n      console.log(\"someactive2\", someActive)\n      if (someActive) return;\n        this.videoSegments.forEach(segment => {\n          segment.showImage = false;\n        });\n        this.isEditing = false;\n        this.showInitialImage = true; // Mostrar la imagen principal\n      }, 10000);\n\n    }\n\n    const key = parseInt(event.key, 10);\n    if (key >= 1 && key <= 4) {\n      this.isEditing = true;\n      this.videoSegments.forEach(segment => {\n        segment.showImage = true;\n        segment.active = false;\n      });\n     \n      const index = key - 1;\n      this.videoSegments[index].active = true;\n      this.videoSegments[index].showImage = false;\n      this.videoSegments[index].videoEnded = false;\n      this.videoSegments[index].showMessage = false;\n    }\n\n  }\n}\n","<div class=\"video-container\">\n\n  <img *ngIf=\"showInitialImage\" src=\"assets/usfq-image.png\" class=\"fullscreen-image\" />\n\n\n  <div class=\"grid-container\" *ngIf=\"isEditing\">\n    <div class=\"video-segment\" *ngFor=\"let segment of videoSegments; let i = index\" [class.active]=\"segment.active\"\n      [class.inactive]=\"!segment.active\">\n      <!-- Imagen de los segmentos -->\n      <img *ngIf=\"segment.showImage\" [src]=\"segment.imageSrc\" class=\"segment-image\" />\n\n\n      <!-- Video de los segmentos -->\n      <video *ngIf=\"segment.active\" autoplay muted (ended)=\"onSegmentVideoEnd(i)\" class=\"segment-video\">\n        <source [src]=\"segment.src\" type=\"video/mp4\" />\n        Your browser does not support the video tag.\n      </video>\n\n      <div class=\"message-container\" *ngIf=\"segment.showMessage\">\n        <h2 class=\"message-title\">{{ segment.title }}</h2>\n        <p class=\"message-text\">{{ segment.message }}</p>\n      </div>\n    </div>\n  </div>\n\n\n\n\n\n  \n\n\n\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}